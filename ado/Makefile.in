NAME=sqlbench

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=debug
GNATMAKE=@GNATMAKE@
GNATCLEAN=gnatclean
SVN=svn
INSTALL=@INSTALL@
DYNAMO=dynamo
LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

GPRPATH:=${NAME}.gpr



distdir=sqlbench-@SQLBENCH_VERSION@

DIST_FILE=sqlbench-@SQLBENCH_VERSION@.tar.gz

HAVE_MYSQL=@ADO_DB_MYSQL@
HAVE_SQLITE=@ADO_DB_SQLITE@

srcdir = .
bindir = @bindir@
sbindir = @sbindir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .
dynamodir=${prefix}/share/dynamo
includedir=${prefix}/share/ada/adainclude
projectdir=${prefix}/share/ada/adainclude
bindir=${prefix}/bin
libdir=${prefix}/lib
alidir=${libdir}/ada/adalib/

MAKE_ARGS=-XMODE=${MODE}

all:     build

# Build executables for all mains defined by the project.
build:
	test ! -f $(GPRPATH) || $(GNATMAKE) -m -p -P "$(GPRPATH)" $(MAKE_ARGS)

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:
	-$(GNATCLEAN) -q -P "$(GPRPATH)"
	-rm -rf $(distdir)

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) -f  -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Rebuild the generated model files
generate:
	$(DYNAMO) generate db

install:  uninstall
	$(INSTALL) bin/${NAME} $(prefix)/bin/${NAME}

uninstall:
	rm -f ${bindir}/${NAME}
